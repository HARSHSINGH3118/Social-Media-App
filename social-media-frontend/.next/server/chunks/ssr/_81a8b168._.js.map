{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///H:/Repositories/Social_media_app/social-media-frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["const bcrypt = require(\"bcryptjs\");\r\nconst cloudinary = require(\"../config/cloudinary\");\r\nconst {\r\n  createUser,\r\n  getUserByEmail,\r\n  getUserById,\r\n  updateUserProfile,\r\n  findUserByEmail,\r\n  createOAuthUser,\r\n  getUserByUsernameWithPosts, // still available if you need it elsewhere\r\n} = require(\"../models/userModel\");\r\nconst { getPostsByUserId } = require(\"../models/postModel\");\r\nconst generateToken = require(\"../utils/generateToken\");\r\n\r\n// =============================\r\n// 🧾 Register New User\r\n// =============================\r\nasync function registerUser(req, res) {\r\n  const { username, email, password } = req.body;\r\n  if (!username || !email || !password)\r\n    return res.status(400).json({ message: \"All fields are required\" });\r\n\r\n  try {\r\n    const existingUser = await getUserByEmail(email);\r\n    if (existingUser)\r\n      return res.status(409).json({ message: \"User already exists\" });\r\n\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n    const user = await createUser({\r\n      username,\r\n      email,\r\n      password: hashedPassword,\r\n    });\r\n\r\n    res.status(201).json({\r\n      id: user.id,\r\n      username: user.username,\r\n      email: user.email,\r\n      token: generateToken(user.id),\r\n    });\r\n  } catch (err) {\r\n    console.error(\"Register Error:\", err);\r\n    res.status(500).json({ message: \"Server error\" });\r\n  }\r\n}\r\n\r\n// =============================\r\n// 🔐 Login\r\n// =============================\r\nasync function loginUser(req, res) {\r\n  const { email, password } = req.body;\r\n  if (!email || !password)\r\n    return res.status(400).json({ message: \"Email and password required\" });\r\n\r\n  try {\r\n    const user = await getUserByEmail(email);\r\n    if (!user) return res.status(401).json({ message: \"Invalid credentials\" });\r\n\r\n    const isMatch = await bcrypt.compare(password, user.password);\r\n    if (!isMatch)\r\n      return res.status(401).json({ message: \"Invalid credentials\" });\r\n\r\n    res.json({\r\n      id: user.id,\r\n      username: user.username,\r\n      email: user.email,\r\n      token: generateToken(user.id),\r\n    });\r\n  } catch (err) {\r\n    console.error(\"Login Error:\", err);\r\n    res.status(500).json({ message: \"Server error\" });\r\n  }\r\n}\r\n\r\n// =============================\r\n// 🔑 OAuth Login or Register\r\n// =============================\r\nasync function oauthLogin(req, res) {\r\n  const { email, username, avatar, provider } = req.body;\r\n  if (!email || !username || !provider)\r\n    return res.status(400).json({ message: \"Missing required fields\" });\r\n\r\n  try {\r\n    let user = await findUserByEmail(email);\r\n    if (!user) {\r\n      user = await createOAuthUser({ email, username, avatar, provider });\r\n    }\r\n\r\n    res.status(200).json({\r\n      id: user.id,\r\n      username: user.username,\r\n      email: user.email,\r\n      avatar: user.avatar,\r\n      provider: user.provider,\r\n      token: generateToken(user.id),\r\n    });\r\n  } catch (err) {\r\n    console.error(\"OAuth Login Error:\", err);\r\n    res.status(500).json({ message: \"Server error\" });\r\n  }\r\n}\r\n\r\n// =============================\r\n// 👤 Get Current Profile (with posts)\r\n// =============================\r\nasync function getProfile(req, res) {\r\n  try {\r\n    const user = await getUserById(req.user.id);\r\n    if (!user) return res.status(404).json({ message: \"User not found\" });\r\n\r\n    const posts = await getPostsByUserId(user.id);\r\n    res.json({ user, posts });\r\n  } catch (err) {\r\n    console.error(\"Get Profile Error:\", err);\r\n    res.status(500).json({ message: \"Server error\" });\r\n  }\r\n}\r\n\r\n// =============================\r\n// 📄 Public Profile by ID\r\n// =============================\r\nasync function getPublicProfileById(req, res) {\r\n  try {\r\n    const id = parseInt(req.params.id, 10);\r\n    if (isNaN(id)) {\r\n      return res.status(400).json({ message: \"Invalid user ID\" });\r\n    }\r\n\r\n    const user = await getUserById(id);\r\n    if (!user) return res.status(404).json({ message: \"User not found\" });\r\n\r\n    const posts = await getPostsByUserId(id);\r\n    res.json({ user, posts });\r\n  } catch (err) {\r\n    console.error(\"Get Public Profile by ID Error:\", err);\r\n    res.status(500).json({ message: \"Server error\" });\r\n  }\r\n}\r\n\r\n// =============================\r\n// ✏️ Update Profile\r\n// =============================\r\nconst updateProfile = async (req, res) => {\r\n  try {\r\n    const { username, bio } = req.body;\r\n\r\n    let avatarUrl;\r\n    if (req.file && req.file.buffer) {\r\n      const streamUpload = (buffer) =>\r\n        new Promise((resolve, reject) => {\r\n          const stream = cloudinary.uploader.upload_stream(\r\n            { folder: \"avatars\", resource_type: \"image\" },\r\n            (error, result) => {\r\n              if (error) return reject(error);\r\n              resolve(result);\r\n            }\r\n          );\r\n          stream.end(buffer);\r\n        });\r\n      const uploadResult = await streamUpload(req.file.buffer);\r\n      avatarUrl = uploadResult.secure_url;\r\n    }\r\n\r\n    const updatedUser = await updateUserProfile(req.user.id, {\r\n      username: username || null,\r\n      bio: bio || null,\r\n      avatar: avatarUrl || null,\r\n    });\r\n\r\n    res.json(updatedUser);\r\n  } catch (err) {\r\n    console.error(\"Update Profile Error:\", err);\r\n    res.status(500).json({ message: \"Server error\" });\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  registerUser,\r\n  loginUser,\r\n  oauthLogin,\r\n  getProfile,\r\n  updateProfile,\r\n  getPublicProfileById,\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///H:/Repositories/Social_media_app/social-media-frontend/src/components/Navbar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Navbar.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Navbar.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///H:/Repositories/Social_media_app/social-media-frontend/src/components/Navbar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Navbar.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Navbar.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///H:/Repositories/Social_media_app/social-media-frontend/src/app/layout.jsx"],"sourcesContent":["// src/app/layout.jsx\nimport \"./globals.css\";\nimport { AuthProvider } from \"@/contexts/AuthContext\";\nimport Navbar from \"@/components/Navbar\"; // ✅ optional\n\nexport const metadata = {\n  title: \"Social Media App\",\n  description: \"Login to get started\",\n};\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body className=\"bg-gray-900 text-white\">\n        <AuthProvider>{children}</AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;;AAErB;AACA,0NAA0C,aAAa;;;;;AAEhD,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC,+HAAA,CAAA,eAAY;0BAAE;;;;;;;;;;;;;;;;AAIvB","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///H:/Repositories/Social_media_app/social-media-frontend/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}